{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoItem","todo","selectId","activeUser","changeCompleted","className","classnames","completed","type","checked","onChange","id","userId","onClick","TodoList","todos","setNewFilter","filtered","selectFilter","setSelectFilter","placeholder","value","e","target","name","defaultValue","map","getTodos","a","fetch","json","getUser","user","CurrentUser","useState","setUser","useEffect","then","newUser","email","phone","App","setFiltered","selectUserId","setSelectUserId","setTodos","visibleTodos","setVisibleTodos","todosFromAPI","filteredTodos","filter","title","includes","filteredUsers","todoId","newVisibleTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37886b3e.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\n\nimport classnames from 'classnames';\nimport { TodoType } from '../../react-app-env';\n\nexport const TodoItem: React.FC<TodoType> = ({\n  todo, selectId, activeUser, changeCompleted,\n}) => {\n  return (\n    <li\n      className={classnames(\n        'TodoList__item',\n        { 'TodoList__item--unchecked': !todo.completed },\n        { 'TodoList__item--checked': todo.completed },\n      )}\n\n    >\n      <label>\n        <input type=\"checkbox\" checked={todo.completed} onChange={() => changeCompleted(todo.id)} />\n        <p>delectus aut autem</p>\n      </label>\n\n      <button\n        className={classnames(\n          'button',\n          'TodoList__user-button',\n          { 'TodoList__user-button--selected': activeUser === todo.userId },\n        )}\n        type=\"button\"\n        onClick={() => selectId(todo.userId)}\n      >\n        {`User#${todo.userId}`}\n      </button>\n    </li>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React from 'react';\nimport './TodoList.scss';\n\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nimport { TodoListType } from '../../react-app-env';\n\nexport const TodoList: React.FC<TodoListType> = ({\n  todos,\n  selectId,\n  activeUser,\n  changeCompleted,\n  setNewFilter,\n  filtered,\n  selectFilter,\n  setSelectFilter,\n}) => {\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <div className=\"TodoList__list-container\">\n        <div className=\"TodoList__nav\">\n          <button type=\"button\" className=\"button\" onClick={() => selectId(0)}>Clear</button>\n          <input\n            type=\"text\"\n            className=\"TodoList__input\"\n            placeholder=\"search\"\n            value={filtered}\n            onChange={(e) => setNewFilter(e.target.value)}\n          />\n          <select name=\"select\" value={selectFilter} onChange={(e) => setSelectFilter(e)}>\n            <option defaultValue=\"allTodos\">all</option>\n            <option value=\"completedTodos\">completed</option>\n            <option value=\"notCompletedTodos\">need to complete</option>\n          </select>\n        </div>\n        <ul className=\"TodoList__list\">\n          {todos.map(todo => (\n            <TodoItem\n              key={todo.id}\n              todo={todo}\n              selectId={selectId}\n              activeUser={activeUser}\n              changeCompleted={changeCompleted}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","const URL_TODO_LINK = 'https://mate.academy/students-api/todos';\nconst URL_USERS_LINK = 'https://mate.academy/students-api/users';\n\nexport const getTodos = async () => {\n  const todos = await fetch(URL_TODO_LINK);\n\n  return todos.json();\n};\n\nexport const getUser = async (userId: number) => {\n  const user = await fetch(`${URL_USERS_LINK}/${userId}`);\n\n  return user.json();\n};\n","import React, { useEffect, useState } from 'react';\nimport './CurrentUser.scss';\n\nimport { getUser } from '../../api';\n\nimport { User } from '../../react-app-env';\n\nexport const CurrentUser: React.FC<{ userId: number }> = ({ userId }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId).then((newUser: User) => setUser(newUser));\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${userId}`}</span></h2>\n\n      <h3 className=\"CurrentUser__name\">{user?.name}</h3>\n      <p className=\"CurrentUser__email\">{user?.email}</p>\n      <p className=\"CurrentUser__phone\">{user?.phone}</p>\n    </div>\n  );\n};\n","/* eslint-disable no-param-reassign */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nimport { getTodos } from './api';\n\nimport { Todo } from './react-app-env';\n\nconst App: React.FC = () => {\n  const [filtered, setFiltered] = useState('');\n  const [selectFilter, setSelectFilter] = useState('allTodos');\n  const [selectUserId, setSelectUserId] = useState(0);\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos()\n      .then((todosFromAPI: Todo[]) => {\n        setTodos(todosFromAPI);\n        setVisibleTodos(todosFromAPI);\n      });\n  }, []);\n\n  const selectNewUser = (id: number) => {\n    setSelectUserId(id);\n  };\n\n  const changeCompleted = (todoId: number) => {\n    const newVisibleTodo = [...visibleTodos].map((todo) => {\n      if (todo.id === todoId) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    });\n\n    setVisibleTodos(newVisibleTodo);\n  };\n\n  function filteredUsers() {\n    const filteredTodos = todos\n      .filter(todo => {\n        switch (selectFilter) {\n          case 'completedTodos':\n            return todo.completed;\n          case 'notCompletedTodos':\n            return !todo.completed;\n          default:\n            return todo;\n        }\n      }).filter(todo => todo.title.includes(filtered));\n\n    setVisibleTodos(filteredTodos);\n  }\n\n  const setNewFilter = (value: string) => {\n    setFiltered(value);\n  };\n\n  const newSelectFilter = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectFilter(e.target.value);\n  };\n\n  useEffect(() => filteredUsers(), [filtered, selectFilter, selectUserId]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={visibleTodos}\n          selectId={selectNewUser}\n          activeUser={selectUserId}\n          changeCompleted={changeCompleted}\n          setNewFilter={setNewFilter}\n          filtered={filtered}\n          selectFilter={selectFilter}\n          setSelectFilter={newSelectFilter}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectUserId ? (\n            <CurrentUser userId={selectUserId} />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}